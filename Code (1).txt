// laba.cpp:
//

#include "stdafx.h"
#include <stdio.h>
#include <stdlib.h>
#include <time.h>

int colCount = 5;
int rowCount = 3;
int matrix;

void main()
{
	int **matrix;
	int *max;
	int dimension, i, j;
	printf("Dimension of the matix (enter odd number) = ");
	do
		scanf_s("%d", &dimension);
	while ( ( dimension % 2 != 1 ) && ( dimension < 1 ) );
	srand(time(0));
	matrix = (int **)calloc(dimension, sizeof(int *));
	for (i = 0; i < dimension; i++)
		matrix[i] = (int *)calloc(dimension, sizeof(int));
	//printf("Enter numbers of the matrix\n");
	for (i = 0; i < dimension; i++)
	{
		for (j = 0; j < dimension; j++)
			matrix[i][j] = rand() % 100;

		printf("\n");
	}
	printf("Input matrix\n");
	PrintMatrix(matrix, dimension);
	max = FindMax(matrix, dimension);
	ChangeCentre(matrix, max, dimension);
	PrintMatrix(matrix, dimension);
	for (i = 0; i < dimension; i++)
		free(matrix[i]);
	free(matrix);
	
}

int FindMax(int **matrix, int dimension)
{
	int i, j;
	int *max;
	max = &matrix[0][0];
	for (i = 1; i < dimension; i++)
		if (matrix[i][i] > *max)
			max = &matrix[i][i];
	i = 0;
	for (j = dimension - 1; j >= 0; j--)
	{
		if (matrix[i][j] > *max)
			max = &matrix[i][j];
		i++;
	}
	printf(" Max number = %d\n", *max);
	return max;
}

void ChangeCentre(int **matrix, int *max, int dimension)
{
	int centre, temp;
	centre = (int)(dimension / 2);
	temp = matrix[centre][centre];
	matrix[centre][centre] = *max;
	*max = temp;
}

void PrintMatrix(int **matrix, int dimension)
{
	int i, j;
	for (i = 0; i < dimension; i++)
	{
		for (j = 0; j < dimension; j++)
			printf("%d ", matrix[i][j]);
		printf("\n");
	}
}
void Second()
{
	int i;
	int j;
	srand(time(0));
	for (i = 0; i < rowCount; i++)
	{
		for (j = 0; j < colCount; j++)
		{
			matrix[i][j] = rand() % 100;
		}
		printf("\n");
	}
	printf("Input matrix\n");
	for (i = 0; i < rowCount; i++)
	{
		for (j = 0; j < colCount; j++)
			printf("%d ", matrix[i][j]);
		printf("\n");
	}
	for (i = 0; i < rowCount; i++)
	{
		EvenNumbers(i);
		OddNumbers(i);
	}
	printf("Output matrix\n");
	for (i = 0; i < rowCount; i++)
	{
		for (j = 0; j < colCount; j++)
			printf("%d ", matrix[i][j]);
		printf("\n");
	}

}


void EvenNumbers(int i)
{
	int number;
	int temp;
	int j;
	int k;
	for (j = 0; j < colCount; j++)
	{
		if (matrix[i][j] % 2 == 0 )
		{
			number = matrix[i][j];
			temp = j;
			for (k = j; k < colCount; k++)
			{
				if (number < matrix[i][k] && matrix[i][k] % 2 == 0)
				{
					matrix[i][temp] = matrix[i][k];
					matrix[i][k] = number;
					temp = k;
				}
			}
		}
	}
}

void OddNumbers(int i)
{
	int number;
	int temp;
	int j = 0;
	int k = 0;
	for (j; j < colCount; j++)
	{
		if (matrix[i][j] % 2 != 0)
		{
			number = matrix[i][j];
			temp = j;
			for (k = j; k < colCount; k++)
			{
				if (number > matrix[i][k] && matrix[i][k] % 2 != 0)
				{
					matrix[i][temp] = matrix[i][k];
					matrix[i][k] = number;
					temp = k;
				}
			}
		}
	}
}